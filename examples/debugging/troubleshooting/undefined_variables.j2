# Undefined Variables Troubleshooting Example
# This template demonstrates common undefined variable scenarios

System: You are analyzing a project with the following structure:

## Project Configuration
Configuration file: {{ config_file.content }}  # ✅ Correct: using .content

## Code Analysis
{% for file in source_files %}
File: {{ file.path }}
{{ file.content }}
{% endfor %}

## Data Processing
Current model: {{ current_model }}
Processing mode: {{ processing_mode }}

## Common Undefined Variable Errors

# This will fail - variable name has a typo
Primary configuration: {{ config_flie.content }}  # Should be "config_file"

# This will fail - wrong variable name
Model version: {{ model_version }}  # Not provided, should be "current_model"

# This will fail - missing variable entirely
User preferences: {{ user_preferences }}  # Never defined

# This will fail - accessing non-existent attribute
File count: {{ source_files.count }}  # Should be "source_files | length"

# This will fail - using undefined loop variable outside loop
{% for file in source_files %}
Processing: {{ file.name }}
{% endfor %}
Last processed: {{ file.name }}  # 'file' undefined outside loop

# This will show FileInfoList instead of content - common mistake!
Configuration: {{ config_file }}  # ❌ Wrong: shows FileInfoList(['config.yaml'])
Should be: {{ config_file.content }}  # ✅ Correct: shows actual content

## Debugging Hints
# To debug these errors:
# 1. Run with --show-context to see available variables
# 2. Check variable names for typos
# 3. Verify all required variables are provided via -f, --fta, or --ftl
# 4. Check loop variable scope
# 5. Always use .content to access file content: {{ variable.content }}
