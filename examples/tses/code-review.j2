# Code Review Request

Please conduct a thorough code review of the following files. Focus on code quality, security, performance, and maintainability.

## Review Guidelines

- **Security**: Look for potential vulnerabilities, input validation issues, and security best practices
- **Performance**: Identify potential bottlenecks and optimization opportunities
- **Maintainability**: Assess code clarity, documentation, and adherence to best practices
- **Testing**: Evaluate test coverage and quality of test cases

## Files for Review

{% if files %}
{% for file in files %}
### {{ file.name }}

**File Type**: {{ file.extension or 'Unknown' }}
**Size**: {{ file.size or 'Unknown' }} bytes

{{ file.content | appendix('file-' + loop.index|string, file.extension or 'text', file.name) }}

{% endfor %}
{% else %}
*No files provided for review.*
{% endif %}

## Specific Review Points

Please address the following in your review:

### 1. Code Quality
- Are functions and classes well-structured and single-purpose?
- Is the code readable and well-documented?
- Are naming conventions consistent and meaningful?
- Is error handling appropriate and comprehensive?

### 2. Security Analysis
- Are there any potential security vulnerabilities?
- Is input validation performed where necessary?
- Are sensitive data and credentials handled securely?
- Are there any injection attack vectors?

### 3. Performance Considerations
- Are there any obvious performance bottlenecks?
- Is memory usage efficient?
- Are database queries optimized (if applicable)?
- Are there opportunities for caching or optimization?

### 4. Testing and Reliability
- Is the code testable and well-tested?
- Are edge cases handled appropriately?
- Is error handling robust?
- Are there any potential race conditions or concurrency issues?

### 5. Architecture and Design
- Does the code follow good architectural principles?
- Are dependencies managed appropriately?
- Is the separation of concerns clear?
- Is the code extensible and maintainable?

## Expected Output

Please provide:

1. **Overall Assessment**: High-level summary of code quality
2. **Critical Issues**: Any security vulnerabilities or major problems
3. **Improvement Suggestions**: Specific recommendations for enhancement
4. **Best Practices**: Areas where the code follows or violates best practices
5. **Priority Ranking**: Order issues by importance/urgency

## Additional Context

{% if environment is defined %}
**Target Environment**: {{ environment }}
{% endif %}
{% if framework is defined %}
**Framework/Technology**: {{ framework }}
{% endif %}
{% if review_focus is defined %}
**Special Focus Areas**: {{ review_focus }}
{% endif %}

---

*This review should be comprehensive but constructive, focusing on actionable improvements that will enhance code quality and maintainability.*
