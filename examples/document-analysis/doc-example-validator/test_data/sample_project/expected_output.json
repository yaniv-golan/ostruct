{
    "project_info": {
        "name": "AwesomeCLI",
        "type": "CLI",
        "documentation_files_analyzed": 2,
        "total_examples_found": 15,
        "analysis_timestamp": "2025-01-15T10:00:00Z",
        "validation_level": "comprehensive"
    },
    "task_management": {
        "instructions": "To update task status: 1) Change 'status' field to IN_PROGRESS when starting, 2) Add 'started_at' timestamp, 3) Update to COMPLETED/FAILED when finished, 4) Add 'completed_at' timestamp and 'notes' field with results. Use jq for JSON manipulation: jq '.tasks[0].status = \"COMPLETED\"' file.json",
        "status_legend": {
            "PENDING": "Not started yet - ready to be picked up by AI agent",
            "IN_PROGRESS": "Currently being worked on - add 'started_at' timestamp",
            "COMPLETED": "Task finished and verified - add 'completed_at' and 'notes'",
            "FAILED": "Task failed validation - add 'error_message' and 'failed_at'",
            "BLOCKED": "Cannot proceed due to dependency failure",
            "SKIPPED": "Task skipped due to context (e.g., platform-specific)"
        },
        "dependency_rules": [
            "No task can start until all dependencies are COMPLETED",
            "CRITICAL tasks should be prioritized over others",
            "Setup and installation tasks must complete before feature tests",
            "Basic examples must work before testing advanced features"
        ],
        "ai_agent_instructions": [
            "Process tasks in dependency order",
            "Update status before starting each task",
            "Include specific error messages if tasks fail",
            "Add execution notes and timestamps for tracking",
            "Mark blocked tasks if dependencies fail"
        ]
    },
    "tasks": [
        {
            "id": "T1.1",
            "title": "Validate Installation via pip",
            "status": "PENDING",
            "priority": "CRITICAL",
            "dependencies": [],
            "example_location": {
                "file": "README.md",
                "section": "Installation",
                "line_range": "7-9"
            },
            "example_content": "pip install awesome-cli",
            "validation_criteria": [
                "Command executes without errors",
                "Package is successfully installed",
                "awesome-cli command becomes available"
            ],
            "test_instructions": [
                "Run: pip install awesome-cli",
                "Verify installation with: awesome-cli --version",
                "Check that command is in PATH"
            ],
            "expected_output_pattern": "Successfully installed awesome-cli",
            "automation_ready": false,
            "category": "installation",
            "setup_requirements": [
                "Python 3.8+ installed",
                "pip package manager available",
                "Internet connection for package download"
            ],
            "environment_dependencies": [
                "Python",
                "pip"
            ]
        },
        {
            "id": "T1.2",
            "title": "Verify Version Command",
            "status": "PENDING",
            "priority": "CRITICAL",
            "dependencies": [
                "T1.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Quick Start",
                "line_range": "25-27"
            },
            "example_content": "awesome-cli --version",
            "validation_criteria": [
                "Command executes successfully",
                "Version information is displayed",
                "Exit code is 0"
            ],
            "test_instructions": [
                "Run: awesome-cli --version",
                "Verify output shows version number",
                "Check exit code is 0"
            ],
            "expected_output_pattern": "AwesomeCLI version",
            "automation_ready": true,
            "category": "basic_usage"
        },
        {
            "id": "T1.3",
            "title": "Verify Help Command",
            "status": "PENDING",
            "priority": "HIGH",
            "dependencies": [
                "T1.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Quick Start",
                "line_range": "31-33"
            },
            "example_content": "awesome-cli --help",
            "validation_criteria": [
                "Command executes successfully",
                "Help text is displayed",
                "All major options are shown",
                "Exit code is 0"
            ],
            "test_instructions": [
                "Run: awesome-cli --help",
                "Verify help text contains usage information",
                "Check that common options are listed",
                "Confirm exit code is 0"
            ],
            "expected_output_pattern": "usage: awesome-cli",
            "automation_ready": true,
            "category": "basic_usage"
        },
        {
            "id": "T2.1",
            "title": "Validate Basic File Processing",
            "status": "PENDING",
            "priority": "HIGH",
            "dependencies": [
                "T1.1",
                "T1.2"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Basic Usage - Processing Files",
                "line_range": "45-47"
            },
            "example_content": "awesome-cli process input.csv",
            "validation_criteria": [
                "Command accepts CSV file input",
                "Processing completes without errors",
                "Output is generated"
            ],
            "test_instructions": [
                "Create sample CSV file: echo 'name,value\\ntest,123' > input.csv",
                "Run: awesome-cli process input.csv",
                "Verify processing completes successfully",
                "Check that output is generated"
            ],
            "expected_output_pattern": "Processing complete",
            "automation_ready": true,
            "category": "basic_usage",
            "setup_requirements": [
                "Sample CSV file available",
                "Write permissions in current directory"
            ]
        },
        {
            "id": "T2.2",
            "title": "Validate Custom Output Format",
            "status": "PENDING",
            "priority": "MEDIUM",
            "dependencies": [
                "T2.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Basic Usage - Processing Files",
                "line_range": "51-53"
            },
            "example_content": "awesome-cli process input.csv --format json --output output.json",
            "validation_criteria": [
                "Command accepts format and output parameters",
                "Output file is created in JSON format",
                "JSON structure is valid"
            ],
            "test_instructions": [
                "Create sample CSV file if not exists",
                "Run: awesome-cli process input.csv --format json --output output.json",
                "Verify output.json file is created",
                "Validate JSON structure with: python -m json.tool output.json"
            ],
            "expected_output_pattern": "output.json",
            "automation_ready": true,
            "category": "advanced_features"
        },
        {
            "id": "T3.1",
            "title": "Validate Configuration File Usage",
            "status": "PENDING",
            "priority": "MEDIUM",
            "dependencies": [
                "T2.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Configuration",
                "line_range": "89-91"
            },
            "example_content": "awesome-cli process data.csv --config config.yaml",
            "validation_criteria": [
                "Configuration file is accepted",
                "Settings from config file are applied",
                "Processing uses configured parameters"
            ],
            "test_instructions": [
                "Create config.yaml with sample configuration",
                "Create sample data.csv file",
                "Run: awesome-cli process data.csv --config config.yaml",
                "Verify configuration is applied"
            ],
            "expected_output_pattern": "Using configuration",
            "automation_ready": true,
            "category": "configuration",
            "setup_requirements": [
                "YAML configuration file",
                "Sample data file"
            ]
        },
        {
            "id": "T4.1",
            "title": "Validate Environment Variables",
            "status": "PENDING",
            "priority": "LOW",
            "dependencies": [
                "T1.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Environment Variables",
                "line_range": "111-116"
            },
            "example_content": "export AWESOME_CLI_LOG_LEVEL=\"DEBUG\"\nawesome-cli process data.csv",
            "validation_criteria": [
                "Environment variables are recognized",
                "Log level is set to DEBUG",
                "Debug output is visible"
            ],
            "test_instructions": [
                "Set environment variable: export AWESOME_CLI_LOG_LEVEL=\"DEBUG\"",
                "Create sample data.csv file",
                "Run: awesome-cli process data.csv",
                "Verify debug output is shown"
            ],
            "expected_output_pattern": "DEBUG",
            "automation_ready": true,
            "category": "configuration"
        },
        {
            "id": "T5.1",
            "title": "Validate Docker Installation",
            "status": "PENDING",
            "priority": "LOW",
            "dependencies": [],
            "example_location": {
                "file": "docs/installation.md",
                "section": "Docker Installation",
                "line_range": "156-158"
            },
            "example_content": "docker pull awesome-cli:latest\ndocker run --rm -v $(pwd):/data awesome-cli:latest process /data/input.csv",
            "validation_criteria": [
                "Docker image can be pulled",
                "Container runs successfully",
                "Volume mounting works",
                "File processing works in container"
            ],
            "test_instructions": [
                "Run: docker pull awesome-cli:latest",
                "Create input.csv in current directory",
                "Run: docker run --rm -v $(pwd):/data awesome-cli:latest process /data/input.csv",
                "Verify processing completes in container"
            ],
            "expected_output_pattern": "Processing complete",
            "automation_ready": false,
            "category": "installation",
            "environment_dependencies": [
                "Docker"
            ],
            "setup_requirements": [
                "Docker installed and running",
                "Internet connection for image pull",
                "Sample input file"
            ]
        },
        {
            "id": "T6.1",
            "title": "Validate API Usage - Basic",
            "status": "PENDING",
            "priority": "MEDIUM",
            "dependencies": [
                "T1.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "API Integration",
                "line_range": "156-164"
            },
            "example_content": "from awesome_cli import DataProcessor\n\nprocessor = DataProcessor(config_file=\"config.yaml\")\nresults = processor.process_file(\"data.csv\")\nprocessor.save_results(results, \"output.json\")",
            "validation_criteria": [
                "Module can be imported",
                "DataProcessor class is available",
                "process_file method works",
                "save_results method works"
            ],
            "test_instructions": [
                "Create Python script with example code",
                "Create sample data.csv and config.yaml files",
                "Run: python test_api.py",
                "Verify output.json is created"
            ],
            "expected_output_pattern": "output.json",
            "automation_ready": true,
            "category": "api_usage",
            "setup_requirements": [
                "Python environment with awesome-cli installed",
                "Sample data and config files"
            ]
        },
        {
            "id": "T7.1",
            "title": "Validate Debug Mode",
            "status": "PENDING",
            "priority": "LOW",
            "dependencies": [
                "T1.1"
            ],
            "example_location": {
                "file": "README.md",
                "section": "Debug Mode",
                "line_range": "201-203"
            },
            "example_content": "awesome-cli --debug process data.csv",
            "validation_criteria": [
                "Debug flag is accepted",
                "Debug information is displayed",
                "Processing still completes"
            ],
            "test_instructions": [
                "Create sample data.csv file",
                "Run: awesome-cli --debug process data.csv",
                "Verify debug information is shown",
                "Confirm processing completes"
            ],
            "expected_output_pattern": "DEBUG",
            "automation_ready": true,
            "category": "troubleshooting"
        }
    ]
}
