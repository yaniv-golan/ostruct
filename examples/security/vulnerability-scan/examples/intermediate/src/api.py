import json
import subprocess
import xml.etree.ElementTree as ET

import jwt
from fastapi import Depends, FastAPI, HTTPException, Request
from fastapi.security import OAuth2PasswordBearer

app = FastAPI()

JWT_SECRET = "my_secret_key"
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")


def load_config():
    with open("config.json", "r") as f:
        return json.loads(f.read())


@app.get("/ping/{host}")
async def ping_host(host: str):
    result = subprocess.check_output(f"ping -c 1 {host}", shell=True)
    return {"result": result.decode()}


@app.post("/parse-xml")
async def parse_xml(request: Request):
    body = await request.body()
    root = ET.fromstring(body)
    return {"root_tag": root.tag}


@app.get("/protected")
async def protected_route(token: str = Depends(oauth2_scheme)):
    try:
        payload = jwt.decode(token, JWT_SECRET)
        return {"data": "sensitive_information"}
    except:
        raise HTTPException(status_code=401)


@app.get("/debug")
async def debug_info():
    config = load_config()
    return {
        "database_url": config.get("db_url"),
        "api_keys": config.get("api_keys"),
        "admin_users": config.get("admins"),
    }


from fastapi.middleware.cors import CORSMiddleware

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
