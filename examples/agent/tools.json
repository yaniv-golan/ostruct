{
    "jq": {
        "description": "JSON filtering and transformation with stdin support",
        "parameters": {
            "filter": "jq filter expression",
            "input": "optional input file path (if not provided, uses stdin)"
        },
        "limits": {
            "max_output_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "filter",
                "input"
            ],
            "retryable": true,
            "max_retries": 2,
            "retry_delay": 1,
            "common_errors": [
                "Invalid JSON",
                "Invalid filter syntax",
                "File not found"
            ]
        },
        "example": {
            "tool": "jq",
            "parameters": [
                {
                    "name": "filter",
                    "value": ".users[] | select(.active == true)"
                },
                {
                    "name": "input",
                    "value": "users.json"
                }
            ],
            "reasoning": "Filter active users from JSON file"
        }
    },
    "grep": {
        "description": "Pattern search with line numbers",
        "parameters": {
            "pattern": "search pattern",
            "file": "file path to search in"
        },
        "limits": {
            "max_file_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "file"
            ],
            "retryable": true,
            "max_retries": 2,
            "retry_delay": 1,
            "common_errors": [
                "File not found",
                "Permission denied",
                "File too large"
            ]
        },
        "example": {
            "tool": "grep",
            "parameters": [
                {
                    "name": "pattern",
                    "value": "error"
                },
                {
                    "name": "file",
                    "value": "app.log"
                }
            ],
            "reasoning": "Search for error messages in log file"
        }
    },
    "sed": {
        "description": "Read-only line extraction",
        "parameters": {
            "expression": "sed expression for line extraction",
            "file": "file path to process"
        },
        "limits": {
            "max_file_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "expression",
                "file"
            ],
            "retryable": true,
            "max_retries": 2,
            "retry_delay": 1,
            "common_errors": [
                "Invalid expression",
                "File not found",
                "Permission denied"
            ]
        },
        "example": {
            "tool": "sed",
            "parameters": [
                {
                    "name": "expression",
                    "value": "1,10p"
                },
                {
                    "name": "file",
                    "value": "data.txt"
                }
            ],
            "reasoning": "Extract first 10 lines from file"
        }
    },
    "awk": {
        "description": "Field and line processing",
        "parameters": {
            "script": "awk script",
            "file": "file path to process"
        },
        "limits": {
            "max_file_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "script",
                "file"
            ],
            "retryable": true,
            "max_retries": 2,
            "retry_delay": 1,
            "common_errors": [
                "Invalid script syntax",
                "File not found",
                "Permission denied"
            ]
        },
        "example": {
            "tool": "awk",
            "parameters": [
                {
                    "name": "script",
                    "value": "{print $1, $3}"
                },
                {
                    "name": "file",
                    "value": "data.csv"
                }
            ],
            "reasoning": "Extract first and third columns from CSV"
        }
    },
    "curl": {
        "description": "HTTP download with size limit",
        "parameters": {
            "url": "URL to download"
        },
        "limits": {
            "max_download_size": "10MB"
        },
        "reliability": {
            "error_prone_params": [
                "url"
            ],
            "retryable": true,
            "max_retries": 3,
            "retry_delay": 2,
            "common_errors": [
                "Network timeout",
                "Invalid URL",
                "Server error",
                "File too large"
            ]
        },
        "example": {
            "tool": "curl",
            "parameters": [
                {
                    "name": "url",
                    "value": "https://api.example.com/data.json"
                }
            ],
            "reasoning": "Download JSON data from API endpoint"
        }
    },
    "write_file": {
        "description": "Create or overwrite file with size check",
        "parameters": {
            "path": "file path to write",
            "content": "content to write"
        },
        "limits": {
            "max_file_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "path"
            ],
            "retryable": false,
            "max_retries": 0,
            "retry_delay": 0,
            "common_errors": [
                "Permission denied",
                "Disk full",
                "Invalid path",
                "Content too large"
            ]
        },
        "example": {
            "tool": "write_file",
            "parameters": [
                {
                    "name": "path",
                    "value": "hello.txt"
                },
                {
                    "name": "content",
                    "value": "Hello, World!"
                }
            ],
            "reasoning": "Create a simple text file"
        }
    },
    "append_file": {
        "description": "Append to file with size check",
        "parameters": {
            "path": "file path to append to",
            "content": "content to append"
        },
        "limits": {
            "max_file_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "path"
            ],
            "retryable": false,
            "max_retries": 0,
            "retry_delay": 0,
            "common_errors": [
                "Permission denied",
                "Disk full",
                "Invalid path",
                "File too large"
            ]
        },
        "example": {
            "tool": "append_file",
            "parameters": [
                {
                    "name": "path",
                    "value": "log.txt"
                },
                {
                    "name": "content",
                    "value": "New log entry\n"
                }
            ],
            "reasoning": "Add entry to existing log file"
        }
    },
    "text_replace": {
        "description": "Safe search and replace with hit counting",
        "parameters": {
            "file": "file path to process",
            "search": "text to search for",
            "replace": "text to replace with"
        },
        "limits": {
            "max_file_size": "32KB",
            "max_replacements": 1000
        },
        "reliability": {
            "error_prone_params": [
                "file",
                "search"
            ],
            "retryable": false,
            "max_retries": 0,
            "retry_delay": 0,
            "common_errors": [
                "File not found",
                "Permission denied",
                "Too many replacements",
                "Invalid search pattern"
            ]
        },
        "example": {
            "tool": "text_replace",
            "parameters": [
                {
                    "name": "file",
                    "value": "config.txt"
                },
                {
                    "name": "search",
                    "value": "old_value"
                },
                {
                    "name": "replace",
                    "value": "new_value"
                }
            ],
            "reasoning": "Update configuration value in file"
        }
    },
    "read_file": {
        "description": "Read file with size limit",
        "parameters": {
            "path": "file path to read"
        },
        "limits": {
            "max_file_size": "32KB"
        },
        "reliability": {
            "error_prone_params": [
                "path"
            ],
            "retryable": true,
            "max_retries": 2,
            "retry_delay": 1,
            "common_errors": [
                "File not found",
                "Permission denied",
                "File too large"
            ]
        },
        "example": {
            "tool": "read_file",
            "parameters": [
                {
                    "name": "path",
                    "value": "config.json"
                }
            ],
            "reasoning": "Read configuration file contents"
        }
    },
    "download_file": {
        "description": "Save HTTP resource to sandbox with size validation",
        "parameters": {
            "url": "URL to download",
            "path": "local path to save file"
        },
        "limits": {
            "max_download_size": "10MB"
        },
        "reliability": {
            "error_prone_params": [
                "url",
                "path"
            ],
            "retryable": true,
            "max_retries": 3,
            "retry_delay": 2,
            "common_errors": [
                "Network timeout",
                "Invalid URL",
                "Permission denied",
                "File too large",
                "Server error"
            ]
        },
        "example": {
            "tool": "download_file",
            "parameters": [
                {
                    "name": "url",
                    "value": "https://example.com/file.pdf"
                },
                {
                    "name": "path",
                    "value": "downloads/file.pdf"
                }
            ],
            "reasoning": "Download file and save to local path"
        }
    }
}
