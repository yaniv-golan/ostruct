Generate comprehensive unit tests for the following code files:

## Source Code for Testing
Review and generate tests for: {{ file_ref("code") }}

## Test Generation Requirements

For each file, generate:

1. **Unit Tests**:
   - Test all public methods and functions
   - Cover edge cases and error conditions
   - Include both positive and negative test cases
   - Test boundary conditions

2. **Test Structure**:
   - Use descriptive test method names
   - Include setup and teardown methods where needed
   - Group related tests in test classes
   - Add meaningful assertions and error messages

3. **Coverage Goals**:
   - Aim for high code coverage (>90%)
   - Test all conditional branches
   - Test exception handling
   - Test integration points

4. **Test Quality**:
   - Tests should be independent and isolated
   - Use appropriate test fixtures and mocks
   - Include performance tests where relevant
   - Add integration tests for complex workflows

## Output Format

Provide your test generation results in the following JSON format:

{
  "test_files": [
    {
      "source_file": "<path_to_source_file>",
      "test_file": "<path_to_test_file>",
      "test_framework": "<framework_name>",
      "test_cases": [
        {
          "test_name": "<descriptive_test_name>",
          "test_type": "unit|integration|performance",
          "description": "<what_this_test_verifies>",
          "test_code": "<complete_test_implementation>"
        }
      ],
      "setup_code": "<any_setup_or_fixture_code>",
      "imports": ["<required_imports>"],
      "coverage_estimate": "<percentage_estimate>"
    }
  ],
  "overall_strategy": "<testing_strategy_summary>",
  "recommendations": [
    "<specific_testing_recommendations>"
  ]
}
