#!/bin/bash
# Setup script for isolated test environment

echo "=== Multi-Markdown Converter Test Environment Setup ==="

# Check if virtual environment exists
if [ ! -d "test_env" ]; then
    echo "‚ùå Virtual environment not found. Please run the setup first."
    exit 1
fi

# Check for .env file and help user create it
if [ ! -f ".env" ]; then
    echo ""
    echo "‚ö†Ô∏è  Environment file (.env) not found."
    echo "üìã You need to create one from the template for API access."
    echo ""
    echo "Quick setup:"
    echo "  1. cp test.env.template .env"
    echo "  2. Edit .env and add your OpenAI API key"
    echo ""
    echo "Or run: cp test.env.template .env && nano .env"
    echo ""
    echo "For dry-run tests (no API calls), you can continue without an API key."
    echo ""
fi

# Activate virtual environment
source test_env/bin/activate

echo "‚úÖ Virtual environment activated"
echo "‚úÖ Python: $(python --version)"
echo "‚úÖ Ostruct: $(ostruct --version)"

# Check key dependencies
echo ""
echo "=== Checking Dependencies ==="

# Python packages
python -c "import fitz; print('‚úÖ PyMuPDF available')" 2>/dev/null || echo "‚ùå PyMuPDF missing"
python -c "import pandas; print('‚úÖ Pandas available')" 2>/dev/null || echo "‚ùå Pandas missing"
python -c "import openai; print('‚úÖ OpenAI available')" 2>/dev/null || echo "‚ùå OpenAI missing"

# System tools
which pandoc >/dev/null && echo "‚úÖ Pandoc available" || echo "‚ùå Pandoc missing"
which tesseract >/dev/null && echo "‚úÖ Tesseract available" || echo "‚ùå Tesseract missing"
which docker >/dev/null && echo "‚úÖ Docker available" || echo "‚ùå Docker missing"

# Check .env configuration
if [ -f ".env" ]; then
    if grep -q "your_openai_api_key_here" .env; then
        echo "‚ö†Ô∏è  API key placeholder detected in .env - update for live tests"
    else
        echo "‚úÖ .env file configured"
    fi
else
    echo "‚ö†Ô∏è  No .env file - API tests will not work"
fi

echo ""
echo "=== Ready to run tests! ==="
echo "Usage examples:"
echo "  python test_runner.py --category pdf --dry-run      # Safe, no API calls"
echo "  python test_runner.py --category all --dry-run      # Test everything safely"
echo "  python test_runner.py --category llm --live         # Requires API key, costs money!"

# Keep shell active with environment
exec bash 