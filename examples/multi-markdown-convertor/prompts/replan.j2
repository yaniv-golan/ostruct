---
system_prompt: |
  You are an expert document conversion recovery specialist. When conversions fail or produce
  suboptimal results, you create targeted, minimal intervention plans to fix specific issues
  without redoing successful parts. Focus on surgical fixes using alternative tools or methods.
---

# Conversion Recovery Planning

## Original Analysis
{{ original_analysis }}

## Failed Plan Summary
The following plan was attempted but encountered issues:
{{ failed_plan }}

## Failure Details
**Failure Reason**: {{ failure_reason }}
**Replan Attempt**: #{{ replan_count }}

{% if validation_issues %}
## Specific Issues Found

The validation identified these specific problems that need to be addressed:

{{ validation_issues }}

{% endif %}

## Recovery Strategy Requirements

Create a **minimal, targeted recovery plan** that:

1. **Addresses ONLY the specific issues** identified above
2. **Preserves all successful conversions** from the original attempt
3. **Uses alternative tools or methods** for failed elements
4. **Includes integration steps** to merge fixes with existing good output

### Important Guidelines:

**DO NOT recreate the entire conversion**. Instead:
- Identify which specific elements failed (e.g., "Table on page 5", "Images in section 3")
- Create steps to extract/convert ONLY those elements
- Plan how to insert the fixed elements into the existing output

### Alternative Tool Suggestions for Common Issues:

Based on the failure, consider these targeted alternatives:

{% if "table" in failure_reason.lower() or "table" in (validation_issues|default("")|string).lower() %}
**For Missing/Broken Tables**:
- If primary converter failed: Try a high-fidelity document converter that preserves complex formatting
- For PDF tables: Use specialized table extraction tools
- As fallback: Extract table region as image then apply OCR
{% endif %}

{% if "image" in failure_reason.lower() or "image" in (validation_issues|default("")|string).lower() %}
**For Missing Images**:
- If media extraction failed: Try direct image extraction tools
- For embedded images: Convert to an intermediate format that preserves media
- Check if images need format conversion or preprocessing
{% endif %}

{% if "list" in failure_reason.lower() or "formatting" in failure_reason.lower() %}
**For List/Formatting Issues**:
- If list nesting is flat: Use an AI-based formatting correction
- Try alternative converters that better preserve structure
- Consider high-fidelity conversion tools for complex formatting
{% endif %}

{% if "ocr" in failure_reason.lower() or "scan" in failure_reason.lower() %}
**For OCR/Scan Issues**:
- Adjust image preprocessing parameters (DPI, background removal)
- Try different OCR languages or recognition modes
- Use page-by-page processing instead of full document
{% endif %}

## Integration Planning

For each fix, plan the reintegration:

### Example Targeted Fix Structure:
```json
{
  "steps": [
    {
      "id": "extract_missing_element",
      "description": "Extract only the missing element from specific location",
      "tool": "appropriate_extraction_tool",
      "command": "[Use tool from Available Tools section to extract specific content]"
    },
    {
      "id": "convert_to_target_format",
      "description": "Convert extracted element to target format",
      "tool": "format_converter",
      "command": "[Convert extracted content to desired format]"
    },
    {
      "id": "merge_into_output",
      "description": "Insert the fixed element at the correct position in existing output",
      "tool": "insert_content",
      "command": "bash $PROJECT_ROOT/scripts/insert_content.sh {{ "{{OUTPUT_FILE}}" }} $TEMP_DIR/fixed_content.md --after 'Section Heading'"
    }
  ]
}
```

## Available Recovery Tools

Review the available tools documentation above and consider:
- High-fidelity converters for specific problem areas
- Specialized extractors for particular content types
- AI-based tools for structure/formatting fixes
- Integration scripts for precise content merging

## Output Requirements

Generate a recovery plan that:
1. Lists specific fixes for each identified issue
2. Uses the most appropriate tool for each fix
3. Includes clear integration steps
4. Minimizes processing time by avoiding redundant work
5. Provides fallback options if the primary fix might fail

Remember: The goal is surgical precision, not starting over.
