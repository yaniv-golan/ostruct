{
  "model_policy": {
    "default_model": "gpt-4",
    "model_restrictions": {
      "allowed_models": [
        "gpt-4",
        "gpt-3.5-turbo"
      ],
      "blocked_models": [
        "experimental-*",
        "gpt-jailbreak"
      ],
      "minimum_capability_level": "advanced"
    },
    "fallback_strategy": {
      "fallback_models": [
        "gpt-3.5-turbo"
      ],
      "degradation_strategy": "On model error, fallback to the next model in the allowed list. If all fail, return a clear error message."
    },
    "model_specific_config": {
      "temperature": 0.2,
      "max_tokens": 2048,
      "top_p": 0.9
    },
    "rationale": "Defaulting to gpt-4 for its advanced capability, but supporting fallback for availability. Model selection sensitive to both security and complexity. Blocklist prevents unauthorized/less-secure models."
  },
  "tool_integration_policy": {
    "enabled_tools": [
      "code_interpreter",
      "file_search",
      "web_search"
    ],
    "tool_configurations": {
      "code_interpreter": {
        "enabled": true,
        "timeout": 30,
        "max_file_size": 1048576,
        "allowed_extensions": [
          ".py",
          ".txt",
          ".csv"
        ],
        "security_restrictions": [
          "sandboxed_execution",
          "network_disabled"
        ]
      },
      "file_search": {
        "enabled": true,
        "max_file_count": 20,
        "max_total_size": 5242880,
        "allowed_extensions": [
          ".txt",
          ".csv",
          ".md"
        ]
      },
      "web_search": {
        "enabled": true,
        "max_queries": 5,
        "timeout": 15,
        "allowed_domains": null,
        "blocked_domains": [
          "social_media.com",
          "example-unsafe.com"
        ]
      }
    },
    "mcp_server_policy": {
      "allow_mcp_servers": false,
      "suggested_servers": null,
      "server_restrictions": [
        "No external unapproved MCP server access"
      ]
    },
    "rationale": "Only enable essential tools, with preset filesystem and web limits. Disable dangerous file types and network actions within code execution. MCP server access limited for enhanced security."
  },
  "security_policy": {
    "input_validation": {
      "strict_validation": true,
      "sanitization_rules": [
        {
          "input_type": "text",
          "rule": "strip_html, remove_control_characters",
          "rationale": "Prevent injection and unexpected formatting."
        },
        {
          "input_type": "file",
          "rule": "allow_list_extensions, scan_virus",
          "rationale": "Minimize risk from file uploads."
        }
      ],
      "validation_errors": "reject_and_explain"
    },
    "file_access": {
      "allowed_paths": [
        "/tmp",
        "./user_files"
      ],
      "blocked_paths": [
        "/etc",
        "/var",
        "/home",
        "~/",
        "/root"
      ],
      "file_size_limits": {
        "max_individual_file": 1048576,
        "max_total_size": 5242880
      },
      "allowed_extensions": [
        ".txt",
        ".csv",
        ".md"
      ]
    },
    "output_security": {
      "sanitize_output": true,
      "redact_sensitive_data": true,
      "output_validation": true,
      "sensitive_patterns": [
        "private[_\\s]key",
        "password[:=]",
        "secret"
      ]
    },
    "authentication": {
      "require_api_key": true,
      "api_key_validation": true,
      "rate_limiting": {
        "enabled": true,
        "requests_per_minute": 60,
        "burst_limit": 10
      }
    },
    "rationale": "Strong input/output validation guards against injection and leakage. File access restricted heavily. API keys required with rate limiting; output always sanitized."
  },
  "global_arguments_policy": {
    "required_global_args": [
      {
        "name": "input",
        "flag": "--input",
        "description": "Input file or string to process",
        "validation": "required, file or string"
      }
    ],
    "optional_global_args": [
      {
        "name": "config",
        "flag": "--config",
        "description": "Alternate configuration file",
        "default_value": "config.yaml",
        "validation": "optional, yaml"
      },
      {
        "name": "verbose",
        "flag": "--verbose",
        "description": "Enable verbose output",
        "default_value": "false",
        "validation": "optional, boolean"
      }
    ],
    "environment_variables": [
      {
        "name": "TOOL_API_KEY",
        "description": "API key for authentication",
        "required": true,
        "default_value": null
      }
    ],
    "argument_precedence": [
      "CLI flags",
      "environment variables",
      "configuration file",
      "defaults"
    ],
    "rationale": "Required arguments cover core input; optionals enable flexibility. Env vars used for secrets; precedence order ensures predictability and security."
  },
  "error_handling_policy": {
    "error_reporting": {
      "verbosity_level": "normal",
      "include_stack_traces": false,
      "log_errors": true,
      "user_friendly_messages": true
    },
    "retry_policies": {
      "max_retries": 2,
      "retry_delay": 3,
      "exponential_backoff": true,
      "retryable_errors": [
        "network_error",
        "timeout",
        "rate_limit"
      ]
    },
    "graceful_degradation": {
      "fallback_strategies": [
        {
          "error_type": "model_unavailable",
          "strategy": "fallback_model",
          "description": "Use fallback model if primary fails."
        },
        {
          "error_type": "tool_unavailable",
          "strategy": "partial_feature_set",
          "description": "Disable unavailable tool, continue with available features."
        }
      ],
      "partial_results": true
    },
    "rationale": "User-centric error reporting avoids information leakage. Retries for transient errors, clear degradations/fallbacks. Logs for developer troubleshooting."
  },
  "resource_management_policy": {
    "performance_limits": {
      "max_memory_usage": 1024,
      "max_cpu_time": 60,
      "max_execution_time": 120
    },
    "concurrency": {
      "max_concurrent_operations": 4,
      "thread_pool_size": 4,
      "queue_size": 10
    },
    "temporary_files": {
      "cleanup_policy": "on_exit",
      "max_temp_size": 10485760,
      "temp_directory": "/tmp"
    },
    "rationale": "Limits set to protect host resources; concurrency lets CLI scale moderately. Temp files cleaned promptly, max sizes enforced to avoid disk exhaustion."
  },
  "deployment_scenarios": {
    "development": {
      "description": "Looser limits, verbose errors, stacked logs for debugging.",
      "policy_overrides": {}
    },
    "production": {
      "description": "Stricter limits, sanitized outputs, input/file access strictly enforced.",
      "policy_overrides": {}
    },
    "enterprise": {
      "description": "Production policy plus enterprise auth, audit logging, extended rate limiting.",
      "policy_overrides": {}
    }
  },
  "customization_options": {
    "configurable_parameters": [
      {
        "parameter": "max_concurrent_operations",
        "description": "Maximum number of simultaneous tasks",
        "type": "integer",
        "default_value": "4",
        "validation": "1-16"
      },
      {
        "parameter": "timeout",
        "description": "Operation timeout in seconds",
        "type": "integer",
        "default_value": "30",
        "validation": "5-300"
      },
      {
        "parameter": "model",
        "description": "Model selection override",
        "type": "string",
        "default_value": "gpt-4",
        "validation": "In allowed_models"
      },
      {
        "parameter": "tool_access",
        "description": "Enable or disable individual tools",
        "type": "json",
        "default_value": "{\"code_interpreter\": true, \"file_search\": true, \"web_search\": true}",
        "validation": "bool for each tool"
      }
    ],
    "configuration_methods": [
      "config file",
      "environment variable",
      "CLI flag"
    ],
    "override_mechanisms": [
      "CLI flags override config/ENV",
      "Admin can set allowed tools via config"
    ]
  },
  "quality_metrics": {
    "security_score": 9.5,
    "usability_score": 8.5,
    "completeness_score": 9.0,
    "recommendations": [
      "Regularly review allowed/blocked file extensions.",
      "Consider more granular rate-limiting per user.",
      "Provide sample configuration files for common use cases."
    ]
  }
}
