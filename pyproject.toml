[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "ostruct-cli"
version = "0.8.8"
description = "CLI for OpenAI Structured Output with Multi-Tool Integration"
authors = [{name = "Yaniv Golan", email = "yaniv@golan.name"}]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "pydantic>=2.6.3,<3.0",
    "jsonschema>=4.23.0,<5.0",
    "chardet>=5.0.0,<6.0",
    "cachetools>=5.3.2,<6.0",
    "ijson>=3.2.3,<4.0",
    "typing-extensions>=4.9.0,<5.0",
    "pyyaml>=6.0.2,<7.0",
    "tomli>=2.0.1,<3.0;python_version<'3.11'",
    "click>=8.1.7,<9.0",
    "werkzeug>=3.1.3,<4.0",
    "openai==1.81.0",
    "tiktoken==0.9.0",
    "pygments>=2.15.0,<3.0",
    "jinja2>=3.1.2,<4.0",
    "openai-model-registry>=0.7.0,<1.0",
    "python-dotenv>=1.0.1,<2.0",
]

[project.scripts]
ostruct = "ostruct.cli.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4,<9.0",
    "pytest-rerunfailures>=12.0,<13.0",
    "flake8>=6.0,<7.0",
    "flake8-pyproject>=1.2.3,<2.0",
    "black==24.8.0",
    "mypy>=1.0,<2.0",
    "pytest-asyncio>=0.25.2,<1.0",
    "pytest-mock>=3.14.0,<4.0",
    "build>=1.2.2.post1,<2.0",
    "twine>=6.0.1,<7.0",
    "python-dotenv>=1.0.1,<2.0",
    "types-jsonschema>=4.23.0.20241208",
    "anyio[trio]==3.7.1",
    "sphinx>=7.0,<8.0",
    "types-pyyaml>=6.0.12.20241230",
    "types-pygments>=2.19.0.20250107",
    "types-chardet>=5.0.4.6",
    "pyfakefs>=5.7.4,<6.0",
    "types-cachetools>=5.5.0.20240820",
    "types-click>=7.1.8,<8.0",
    "types-requests>=2.32.0.20241016",
    "pre-commit>=4.1.0,<5.0",
    "psutil>=7.0.0,<8.0",
    "hypothesis>=6.0.0,<7.0",
    "tomli>=2.0.1,<3.0",
]
docs = [
    "sphinx>=7.0,<8.0",
    "sphinx-rtd-theme>=1.0,<2.0",
    "myst-parser>=2.0.0,<3.0",
    "sphinx-design>=0.5.0,<1.0",
    "tomli>=2.0.1,<3.0;python_version<'3.11'",
]
examples = [
    "tenacity>=8.2.3,<9.0",
    "asyncio-throttle>=1.0.2,<2.0",
]

[tool.poetry]
packages = [{include = "ostruct", from = "src"}]
include = ["py.typed"]

[tool.flake8]
    max-line-length = 120
    extend-ignore = ["E203"]

    [tool.mypy]
    plugins = ["pydantic.mypy"]
    python_version = "3.10"
    warn_unused_configs = true
    exclude = ["docs/*", "examples/*"]
    disallow_untyped_defs = false
    check_untyped_defs = true
    warn_return_any = false
    warn_unused_ignores = false
    show_error_codes = true

    # Stricter settings for source code
    [[tool.mypy.overrides]]
    module = "ostruct.*"
    disallow_untyped_defs = true
    warn_return_any = true
    warn_unused_ignores = true

    # Special handling for Click-related code
    [[tool.mypy.overrides]]
    module = ["click.*", "ostruct.cli.click_options"]
    disallow_untyped_decorators = false
    warn_return_any = false

    [tool.black]
    line-length = 79
    target-version = ["py310"]
    include = '\.pyi?$'
    preview = false
    required-version = "24.8.0"

    [tool.pytest.ini_options]
    asyncio_mode = "strict"
    testpaths = ["tests"]
    python_files = ["test_*.py"]
    markers = [
        "live: mark test as a live test that makes real API calls or runs actual ostruct commands",
        "asyncio: mark test as requiring async loop",
        "no_fs: mark test to disable pyfakefs and use real filesystem",
        "slow: mark test as slow performance/stress test",
        "flaky: mark test as flaky (may need reruns)",
        "mock_openai: mark test to use mock OpenAI client"
    ]
    asyncio_default_fixture_loop_scope = "function"
    # By default, skip live tests unless explicitly requested
    addopts = "-m 'not live'"

    [tool.ruff]
    target-version = "py310"
    fix = true
    line-length = 79  # Match Black's setting

    [tool.ruff.lint]
    select = [
        "E",   # pycodestyle errors
        "W",   # pycodestyle warnings
        "F",   # Pyflakes
        "I",   # isort (import sorting)
    ]
    ignore = [
        "E501",  # Line too long (handled by Black)
    ]

    [tool.ruff.lint.isort]
    # Black-compatible settings
    force-single-line = false
    combine-as-imports = true
    split-on-trailing-comma = true
